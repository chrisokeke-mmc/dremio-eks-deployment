#
# Copyright (C) 2017-2018 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

paths: {
  # Local path for dremio to store data.
  local: ${DREMIO_HOME}"/data"

  # Distributed path Dremio data including job results, downloads, uploads, etc
  {{- if eq .Values.distStorage.type "local" }}
  dist: "pdfs://"${paths.local}"/pdfs"
  {{- else if eq .Values.distStorage.type "aws" }}
  dist: "dremioS3:///{{ required "AWS bucketname required" .Values.distStorage.aws.bucketName }}{{ required "Path required" .Values.distStorage.aws.path }}"
  {{- else if eq .Values.distStorage.type "azure" }}
  dist: "dremioAdl://{{ required "Azure Datalake store name required" .Values.distStorage.azure.datalakeStoreName }}.azuredatalakestore.net{{ required "Path required" .Values.distStorage.azure.path }}"
  {{- else if eq .Values.distStorage.type "azureStorage" }}
  dist: "dremioAzureStorage://:///{{ required "Azure Storage filesystem required" .Values.distStorage.azureStorage.filesystem }}{{ required "Path required" .Values.distStorage.azureStorage.path }}"
  {{- end }}

  # Configure results storage and spilling storage
  {{- if .Values.ephemeralStorage.enabled }}
  results: "pdfs://{{ .Values.ephemeralStorage.mountPath1 }}"
    {{- if ne .Values.ephemeralStorage.mountPath4 "None"}}
  spilling: ["{{ .Values.ephemeralStorage.mountPath1 }}","{{ .Values.ephemeralStorage.mountPath2 }}","{{ .Values.ephemeralStorage.mountPath3 }}","{{ .Values.ephemeralStorage.mountPath4 }}"]
    {{- else if ne .Values.ephemeralStorage.mountPath3 "None"}}
  spilling: ["{{ .Values.ephemeralStorage.mountPath1 }}","{{ .Values.ephemeralStorage.mountPath2 }}","{{ .Values.ephemeralStorage.mountPath3 }}"]
    {{- else if ne .Values.ephemeralStorage.mountPath2 "None"}}
  spilling: ["{{ .Values.ephemeralStorage.mountPath1 }}","{{ .Values.ephemeralStorage.mountPath2 }}"]
    {{- else if ne .Values.ephemeralStorage.mountPath1 "None" }}
  spilling: ["{{ .Values.ephemeralStorage.mountPath1 }}"]
    {{- end }}
  {{- else }}
  results: "pdfs://"${paths.local}"/results"
  {{- end }}
}

services: {
  # The services running are controlled via command line options passed in
  # while starting the services via kubernetes. Updating the three values
  # below will not impact what services are running.
  #   coordinator.enabled: true,
  #   coordinator.master.enabled: true,
  #   executor.enabled: true
  #
  # Other service parameters can be customized via this file.

  # Cloud Cache is supported in Dremio 4.0.0+.
  {{- if and .Values.executor.cloudCache.enabled (or (ge .Values.imageTag "4.0.0") (eq .Values.imageTag "latest")) }}
  executor: {
    cache: {
  # Configure C3 storage to ephemeral or local (default)
    {{- if .Values.ephemeralStorage.enabled }}
      path.db: "{{ .Values.ephemeralStorage.mountPath1 }}/dremio",
      {{- if ne .Values.ephemeralStorage.mountPath4 "None"}}
      path.fs: ["{{ .Values.ephemeralStorage.mountPath1 }}/dremio","{{ .Values.ephemeralStorage.mountPath2 }}/dremio","{{ .Values.ephemeralStorage.mountPath3 }}/dremio","{{ .Values.ephemeralStorage.mountPath4 }}/dremio"],
      {{- else if ne .Values.ephemeralStorage.mountPath3 "None"}}
      path.fs: ["{{ .Values.ephemeralStorage.mountPath1 }}/dremio","{{ .Values.ephemeralStorage.mountPath2 }}/dremio","{{ .Values.ephemeralStorage.mountPath3 }}/dremio"],
      {{- else if ne .Values.ephemeralStorage.mountPath2 "None"}}
      path.fs: ["{{ .Values.ephemeralStorage.mountPath1 }}/dremio","{{ .Values.ephemeralStorage.mountPath2 }}/dremio"],
      {{- else if ne .Values.ephemeralStorage.mountPath1 "None" }}
      path.fs: ["{{ .Values.ephemeralStorage.mountPath1 }}/dremio"],
      {{- end }}
    {{- else }}
      path.db: "/var/lib/dremio",
      path.fs: ["/var/lib/dremio"],
    {{- end }}
      pctquota.db: {{ .Values.executor.cloudCache.quota.db_pct }},
      pctquota.fs: [{{ .Values.executor.cloudCache.quota.fs_pct }}]
    }
  }
  {{- end }}
}

{{- if and .Values.executor.cloudCache.enabled (ne .Values.distStorage.type "local") }}
debug: {
  # Enable caching for distributed storage, it is turned off by default
  dist.caching.enabled: true,
  # Max percent of total available cache space to use when possible
  # for distributed storage
  dist.max.cache.space.percent: {{ .Values.executor.cloudCache.quota.cache_pct }}
}
{{- end }}

{{- if .Values.tls.ui.enabled }}
services.coordinator.web.ssl.enabled: true
services.coordinator.web.ssl.auto-certificate.enabled: false

services.coordinator.web.ssl.keyStore: "/opt/dremio/tls/ui.pkcs12"
{{- end }}

{{- if .Values.tls.client.enabled }}
# Client endpoint (i.e. ODBC/JDBC) encryption is only supported in
# Dremio Enterprise Edition.
services.coordinator.client-endpoint.ssl.enabled: true
services.coordinator.client-endpoint.ssl.auto-certificate.enabled: false
services.coordinator.client-endpoint.ssl.keyStore: "/opt/dremio/tls/client.pkcs12"
{{- end }}

